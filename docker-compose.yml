version: "3.9"

volumes:
  postgres:

services:
  nginx:
    container_name: paqmind-nginx
    image: nginx:stable-alpine
    restart: unless-stopped
#    env_file: .env
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
    depends_on:
      - next

  next:
    container_name: paqmind-next
    build: ./next
    command: yarn dev
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    env_file: .env
    ports:
      - "3000:3000"
    volumes:
      - ./next/components:/usr/src/app/components
      - ./next/content:/usr/src/app/content
      - ./next/hooks:/usr/src/app/hooks
      - ./next/layout:/usr/src/app/layout
      - ./next/lib:/usr/src/app/lib
      - ./next/pages:/usr/src/app/pages
      # - ./next/prisma:/usr/src/app/prisma
      - ./next/public:/usr/src/app/public
      - ./next/styles:/usr/src/app/styles

  hasura:
    container_name: paqmind-hasura
    image: hasura/graphql-engine:v2.9.0
    ports:
      - "8080:8080"
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    env_file: .env
    environment:
      HASURA_GRAPHQL_EXPERIMENTAL_FEATURES: naming_convention
      HASURA_GRAPHQL_DEFAULT_NAMING_CONVENTION: graphql-default
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log

  postgres:
    container_name: paqmind-postgres
    image: "postgres:14-alpine"
    restart: unless-stopped
    volumes:
      - postgres:/var/lib/postgresql/data
    env_file: .env
    environment:
      PGUSER: paqmind
    ports:
      - "5432:5432"
    healthcheck: # TODO consider to move to Dockerfile
      test: ["CMD-SHELL", "pg_isready -U paqmind"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 30s
    # TODO does not work properly, try host
    # or https://github.com/docker-library/healthcheck/tree/master/postgres

